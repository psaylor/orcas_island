define(["jquery","sharedAudio","sharedSocket","utils"],function(e,t,n,r){console.log("> Loading recognizer.js");try{var i=i||webkitSpeechRecognition;console.log("Got recognition")}catch(s){var o=Object;console.log("Error getting recognition:",s);return}var u=function(t,n){if(!(this instanceof u))return new u(t,n);console.log("Creating new Recognizer on element",t),n=n||{},this.settings=e.extend({},u.DEFAULTS,n),this.element=e(t),this.$this=e(this);var r=this;this.listening=!1,this._setupRecognition(),this.element.click(function(){r.toggle.call(r)})};return u.DEFAULTS={continuous:!0},u.SpeechRecognition=i,u.prototype._setupRecognition=function(){this.recognition=new u.SpeechRecognition,this.recognition.continuous=this.settings.continuous;var e=this;this.recognition.onresult=function(t){e.$this.trigger("result.spoke.recognizer",t);for(var n=t.resultIndex;n<t.results.length;++n)if(t.results[n].isFinal){var r=t.results[n][0].transcript.trim();console.log("Text result:",r),e.$this.trigger("finalResult.spoke.recognizer",[r])}},this.recognition.onend=function(){console.log("Recognition ended."),e.listening=!1,e.$this.trigger("stop.spoke.recognizer")}},u.prototype._startRecognition=function(){this.listening=!0,this.recognition.start(),this.$this.trigger("start.spoke.recognizer")},u.prototype._stopRecognition=function(){this.recognition.stop()},u.prototype.toggle=function(){console.log("toggleRecognition"),this.listening?this._stopRecognition():this._startRecognition()},u.prototype.on=function(e,t){return this.$this.on(e,t)},{Recognizer:u}});